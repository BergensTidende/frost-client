# generated by datamodel-codegen:
#   filename:  https://frost.met.no/swagger.json
#   timestamp: 2023-10-27T08:26:51+00:00

from __future__ import annotations

from typing import Dict, List, Literal, TypeVar, Union

from typing_extensions import NotRequired, TypedDict

FrostType = TypeVar("FrostType", str, int, float, List[str], List[int], List[float])


class FrostResponseError(TypedDict):
    code: NotRequired[str]
    message: NotRequired[str]
    reason: NotRequired[str]


class FrostSourceArgs(TypedDict):
    ids: NotRequired[str | List[str]]
    types: NotRequired[str]
    elements: NotRequired[str]
    geometry: NotRequired[str]
    nearestmaxcount: NotRequired[str]
    validtime: NotRequired[str]
    name: NotRequired[str | List[str]]
    country: NotRequired[str]
    county: NotRequired[str]
    municipality: NotRequired[str]
    wmoid: NotRequired[str]
    stationholder: NotRequired[str]
    externalids: NotRequired[str | List[str]]
    fields: NotRequired[str | List[str]]
    icaocode: NotRequired[str]
    shipcode: NotRequired[str]
    wigosid: NotRequired[str]


class FrostAvailableTimeSeriesArgs(TypedDict):
    include_sourcemeta: NotRequired[bool]
    sources: NotRequired[str | List[str]]
    referencetime: NotRequired[str]
    elements: NotRequired[str | List[str]]
    timeoffsets: NotRequired[str | List[str]]
    timeresolutions: NotRequired[str | List[str]]
    timeseriesids: NotRequired[str | List[str]]
    performancecategories: NotRequired[str | List[str]]
    exposurecategories: NotRequired[str | List[str]]
    levels: NotRequired[str | List[str]]
    levelTypes: NotRequired[str | List[str]]
    levelUnits: NotRequired[str | List[str]]
    fields: NotRequired[str | List[str]]


class FrostAvailableSourcesFrequenciesArgs(TypedDict):
    sources: NotRequired[str | List[str]]
    types: NotRequired[str | List[str]]
    fields: NotRequired[str | List[str]]


class FrostFrequenciesArgs(TypedDict):
    include_sourcemeta: NotRequired[bool]
    sources: NotRequired[str | List[str]]
    durations: NotRequired[str | List[str]]
    frequencies: NotRequired[str | List[str]]
    unit: NotRequired[str]
    fields: NotRequired[str | List[str]]


class FrostObservationsArgs(TypedDict):
    include_sourcemeta: NotRequired[bool]
    sources: NotRequired[str | List[str]]
    referencetime: NotRequired[str]
    elements: NotRequired[str | List[str]]
    maxage: NotRequired[str]
    limit: NotRequired[str]
    timeoffsets: NotRequired[str | List[str]]
    timeresolutions: NotRequired[str | List[str]]
    timeseriesids: NotRequired[str | List[str]]
    performancecategories: NotRequired[str | List[str]]
    exposurecategories: NotRequired[str | List[str]]
    qualities: NotRequired[str | List[str]]
    levels: NotRequired[str | List[str]]
    fields: NotRequired[str | List[str]]


class FrostCalcMethod(TypedDict):
    baseName: NotRequired[str]
    method: NotRequired[str]
    innerMethod: NotRequired[str]
    period: NotRequired[str]
    innerPeriod: NotRequired[str]
    addition: NotRequired[str]
    methodDescription: NotRequired[str]
    innerMethodDescription: NotRequired[str]
    methodUnit: NotRequired[str]
    innerMethodUnit: NotRequired[str]


class FrostCfConvention(TypedDict):
    standardName: NotRequired[str]
    cellMethod: NotRequired[str]
    unit: NotRequired[str]
    version: NotRequired[str]


class FrostOldMetNoConvention(TypedDict):
    elementCodes: NotRequired[List[str]]
    unit: NotRequired[str]


class FrostSensorLevels(TypedDict):
    levelType: NotRequired[str]
    unit: NotRequired[str]
    defaultValue: NotRequired[Dict[str, str | int | float]]
    values: NotRequired[List[float]]


class FrostTimeOffsets(TypedDict):
    defaultValue: NotRequired[str]
    values: NotRequired[List[str]]


class FrostCodeTableValue(TypedDict):
    value: NotRequired[str]
    description: NotRequired[str]
    additionalInfo: NotRequired[str]


class FrostClimateNormal(TypedDict):
    tag: Literal["FrostClimateNormal"]
    sourceId: NotRequired[str]
    elementId: NotRequired[str]
    period: NotRequired[str]
    month: NotRequired[Dict[str, str | int | float]]
    day: NotRequired[Dict[str, str | int | float]]
    normal: NotRequired[Dict[str, str | int | float]]


class FrostClimateNormalsAvailable(TypedDict):
    tag: Literal["FrostClimateNormalsAvailable"]
    sourceId: NotRequired[str]
    elementId: NotRequired[str]
    period: NotRequired[str]


FrostPoint = TypedDict(
    "FrostPoint",
    {
        "@type": NotRequired[str],
        "coordinates": NotRequired[List[float]],
    },
)

FrostSource = TypedDict(
    "FrostSource",
    {
        "tag": Literal["FrostSource"],
        "@type": NotRequired[str],
        "id": NotRequired[str],
        "name": NotRequired[str],
        "shortName": NotRequired[str],
        "country": NotRequired[str],
        "countryCode": NotRequired[str],
        "wmoId": NotRequired[Dict[str, str | int | float]],
        "geometry": NotRequired[FrostPoint],
        "distance": NotRequired[Dict[str, str | int | float]],
        "masl": NotRequired[Dict[str, str | int | float]],
        "validFrom": NotRequired[str],
        "validTo": NotRequired[str],
        "county": NotRequired[str],
        "countyId": NotRequired[Dict[str, str | int | float]],
        "municipality": NotRequired[str],
        "municipalityId": NotRequired[Dict[str, str | int | float]],
        "stationHolders": NotRequired[List[str]],
        "externalIds": NotRequired[List[str]],
        "icaoCodes": NotRequired[List[str]],
        "shipCodes": NotRequired[List[str]],
        "wigosId": NotRequired[str],
    },
)


class FrostIDFValue(TypedDict):
    intensity: NotRequired[float]
    duration: NotRequired[float]
    frequency: NotRequired[int]


class FrostRainfallIDFResponse(TypedDict):
    tag: Literal["FrostRainfallIDFResponse"]
    sourceId: NotRequired[str]
    version: NotRequired[str]
    geometry: NotRequired[FrostPoint]
    masl: NotRequired[Dict[str, str | int | float]]
    operatingPeriods: NotRequired[List[str]]
    numberOfSeasons: NotRequired[Dict[str, str | int | float]]
    firstYearOfPeriod: NotRequired[Dict[str, str | int | float]]
    lastYearOfPeriod: NotRequired[Dict[str, str | int | float]]
    unit: NotRequired[str]
    values: NotRequired[List[FrostIDFValue]]


class FrostRainfallIDFSource(TypedDict):
    tag: Literal["FrostRainfallIDFSource"]
    sourceId: NotRequired[str]
    version: NotRequired[str]
    validFrom: NotRequired[str]
    validTo: NotRequired[str]
    numberOfSeasons: NotRequired[Dict[str, str | int | float]]
    firstYearOfPeriod: NotRequired[Dict[str, str | int | float]]
    lastYearOfPeriod: NotRequired[Dict[str, str | int | float]]


class FrostLocation(TypedDict):
    tag: Literal["FrostLocation"]
    name: NotRequired[str]
    feature: NotRequired[str]
    geometry: NotRequired[FrostPoint]


class FrostLevel(TypedDict):
    levelType: NotRequired[str]
    unit: NotRequired[str]
    value: NotRequired[Dict[str, str | int | float]]


class FrostObservationTimeSeriesResponse(TypedDict):
    tag: Literal["FrostObservationTimeSeriesResponse"]
    sourceId: NotRequired[str]
    geometry: NotRequired[FrostPoint]
    level: NotRequired[FrostLevel]
    validFrom: NotRequired[str]
    validTo: NotRequired[str]
    timeOffset: NotRequired[str]
    timeResolution: NotRequired[str]
    timeSeriesId: NotRequired[Dict[str, str | int | float]]
    elementId: NotRequired[str]
    unit: NotRequired[str]
    codeTable: NotRequired[str]
    performanceCategory: NotRequired[str]
    exposureCategory: NotRequired[str]
    status: NotRequired[str]
    uri: NotRequired[str]
    userGroupIds: NotRequired[List[float]]


class FrostObservation(TypedDict):
    elementId: NotRequired[str]
    value: NotRequired[str]
    origValue: NotRequired[str]
    unit: NotRequired[str]
    codeTable: NotRequired[str]
    level: NotRequired[FrostLevel]
    timeOffset: NotRequired[str]
    timeResolution: NotRequired[str]
    timeSeriesId: NotRequired[Dict[str, str | int | float]]
    performanceCategory: NotRequired[str]
    exposureCategory: NotRequired[str]
    qualityCode: NotRequired[Dict[str, str | int | float]]
    controlInfo: NotRequired[str]
    dataVersion: NotRequired[Dict[str, str | int | float]]


class FrostObservationsResponse(TypedDict):
    tag: Literal["FrostObservationsResponse"]
    sourceId: NotRequired[str]
    geometry: NotRequired[FrostPoint]
    referenceTime: NotRequired[str]
    observations: NotRequired[List[FrostObservation]]


class FrostAction(TypedDict):
    pass


class FrostActionAnyContent(TypedDict):
    pass


class FrostTextualQualityInformation(TypedDict):
    controlType: NotRequired[str]
    value: NotRequired[int]
    meaning: NotRequired[str]


class FrostUserQualityInformation(TypedDict):
    value: NotRequired[int]
    shortMeaning: NotRequired[str]
    meaning: NotRequired[str]


class FrostRecord(TypedDict):
    tag: Literal["FrostRecord"]
    sourceId: NotRequired[str]
    sourceName: NotRequired[str]
    county: NotRequired[str]
    municipality: NotRequired[str]
    elementId: NotRequired[str]
    month: NotRequired[Dict[str, str | int | float]]
    referenceTime: NotRequired[str]
    value: NotRequired[Dict[str, str | int | float]]


class FrostElement(TypedDict):
    tag: Literal["FrostElement"]
    id: NotRequired[str]
    name: NotRequired[str]
    description: NotRequired[str]
    unit: NotRequired[str]
    codeTable: NotRequired[str]
    status: NotRequired[str]
    calculationMethod: NotRequired[FrostCalcMethod]
    category: NotRequired[str]
    timeOffsets: NotRequired[FrostTimeOffsets]
    sensorLevels: NotRequired[FrostSensorLevels]
    oldConvention: NotRequired[FrostOldMetNoConvention]
    cfConvention: NotRequired[FrostCfConvention]


class FrostCodeTable(TypedDict):
    tag: Literal["FrostCodeTable"]
    id: NotRequired[str]
    description: NotRequired[str]
    additionalInfo: NotRequired[str]
    size: NotRequired[Dict[str, str | int | float]]
    values: NotRequired[List[FrostCodeTableValue]]


class FrostQualityInformation(TypedDict):
    tag: Literal["FrostQualityInformation"]
    summarized: NotRequired[FrostUserQualityInformation]
    flag: NotRequired[str]
    details: NotRequired[List[FrostTextualQualityInformation]]


FrostDataTypes = Union[
    FrostQualityInformation,
    FrostObservationsResponse,
    FrostCodeTable,
    FrostElement,
    FrostRecord,
    FrostSource,
    FrostLocation,
    FrostRainfallIDFSource,
    FrostRainfallIDFResponse,
    FrostClimateNormalsAvailable,
    FrostClimateNormal,
    FrostObservationTimeSeriesResponse,
]


FrostResponse = TypedDict(
    "FrostResponse",
    {
        "@context": NotRequired[str],
        "@type": NotRequired[str],
        "apiVersion": NotRequired[str],
        "license": NotRequired[str],
        "createdAt": NotRequired[str],
        "queryTime": NotRequired[str],
        "currentItemCount": NotRequired[int],
        "itemsPerPage": NotRequired[int],
        "offset": NotRequired[int],
        "totalItemCount": NotRequired[int],
        "nextLink": NotRequired[str],
        "previousLink": NotRequired[str],
        "currentLink": NotRequired[str],
        "data": NotRequired[List[FrostDataTypes]],
        "error": NotRequired[FrostResponseError],
    },
)
